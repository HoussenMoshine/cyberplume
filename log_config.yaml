version: 1
disable_existing_loggers: False
formatters:
  default:
    "()": "uvicorn.logging.DefaultFormatter"
    "fmt": "%(levelprefix)s %(asctime)s [%(name)s] %(levelname)s: %(message)s"
    "datefmt": "%Y-%m-%d %H:%M:%S"
  access:
    "()": "uvicorn.logging.AccessFormatter"
    "fmt": '%(levelprefix)s %(asctime)s %(client_addr)s - "%(request_line)s" %(status_code)s'
    "datefmt": "%Y-%m-%d %H:%M:%S"

handlers:
  default:
    formatter: default
    class: logging.StreamHandler
    stream: ext://sys.stderr
  access:
    formatter: access
    class: logging.StreamHandler
    stream: ext://sys.stdout

loggers:
  # Logger racine de Python - pour tous les logs de l'application (backend.*)
  # et autres bibliothèques si elles logguent vers le root.
  root:
    handlers: [default]
    level: DEBUG
  # Logger spécifique pour Uvicorn lui-même (erreurs internes, démarrage, etc.)
  uvicorn.error:
    handlers: [default]
    level: INFO # Peut être DEBUG pour plus de verbosité d'Uvicorn
    propagate: no # Ne pas propager au root si root a déjà le même handler
  # Logger pour les requêtes d'accès
  uvicorn.access:
    handlers: [access]
    level: INFO
    propagate: no